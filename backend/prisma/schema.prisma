// üóÑÔ∏è LifeVault Database Schema
// –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å—Ö–µ–º–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–∏

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// üë§ –û—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
model User {
  id                String             @id @default(uuid())
  phoneNumber       String             @unique
  isPhoneVerified   Boolean            @default(false)
  verificationCode  String?
  codeExpiresAt     DateTime?
  
  // JWT —Ç–æ–∫–µ–Ω—ã
  refreshTokens     RefreshToken[]
  
  // –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  profile          UserProfile?
  
  // –ü—Ä–∏–≤—ã—á–∫–∏
  habits           Habit[]
  
  // –°–∏—Å—Ç–µ–º–∞ –≤—ã–∑–æ–≤–æ–≤ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  challengeProgress UserChallengeProgress[]
  achievements     UserAchievement[]
  
  // –ë–∞–Ω–∫ –≤—Ä–µ–º–µ–Ω–∏ –∂–∏–∑–Ω–∏
  timeBankAccount  TimeBankAccount?
  timeBankTransactions TimeBankTransaction[]
  
  // –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–ª—è
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  lastLoginAt      DateTime?
  
  @@map("users")
}

// üîÑ Refresh —Ç–æ–∫–µ–Ω—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  @@map("refresh_tokens")
}

// üìù –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
model UserProfile {
  id              String    @id @default(uuid())
  userId          String    @unique
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  firstName       String?
  lastName        String?
  dateOfBirth     DateTime
  gender          Gender
  
  // –§–∏–∑–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  height          Int       // –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö
  weight          Int       // –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö
  region          String    // ISO –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã/—Ä–µ–≥–∏–æ–Ω–∞
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
  isPublicProfile Boolean   @default(false)
  
  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  @@map("user_profiles")
}

// üö≠ –ü—Ä–∏–≤—ã—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
model Habit {
  id              String      @id @default(uuid())
  userId          String
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  type            HabitType
  isActive        Boolean     @default(true)
  
  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–≤—ã—á–∫–∏
  dailyUsage      Int?        // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –¥–µ–Ω—å (—Å–∏–≥–∞—Ä–µ—Ç, —Å—Ç–∞–∫–∞–Ω–æ–≤ –∏ —Ç.–¥.)
  costPerUnit     Float?      // —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –µ–¥–∏–Ω–∏—Ü—É
  unitsPerPack    Int?        // –µ–¥–∏–Ω–∏—Ü –≤ –ø–∞—á–∫–µ (–¥–ª—è –∫—É—Ä–µ–Ω–∏—è)
  
  // –î–∞—Ç—ã
  startDate       DateTime?   // –∫–æ–≥–¥–∞ –Ω–∞—á–∞–ª –ø—Ä–∏–≤—ã—á–∫—É
  quitDate        DateTime?   // –∫–æ–≥–¥–∞ –±—Ä–æ—Å–∏–ª
  targetQuitDate  DateTime?   // –ø–ª–∞–Ω–∏—Ä—É–µ–º–∞—è –¥–∞—Ç–∞ –æ—Ç–∫–∞–∑–∞
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  additionalInfo  String?
  
  // –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
  habitLogs       HabitLog[]
  
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@map("habits")
}

// üìä –õ–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–∏–≤—ã—á–µ–∫
model HabitLog {
  id        String    @id @default(uuid())
  habitId   String
  habit     Habit     @relation(fields: [habitId], references: [id], onDelete: Cascade)
  
  // –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
  action    HabitLogAction
  oldValue  Json?     // —Å—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (JSON)
  newValue  Json?     // –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (JSON)
  notes     String?
  
  createdAt DateTime  @default(now())
  
  @@map("habit_logs")
}

// üéØ –°–∏—Å—Ç–µ–º–∞ –¥–Ω–µ–≤–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
model Challenge {
  id              String                  @id @default(uuid())
  
  title           String
  description     String
  category        ChallengeCategory
  difficulty      ChallengeDifficulty
  duration        ChallengeDuration
  
  // –°–∏—Å—Ç–µ–º–∞ –Ω–∞–≥—Ä–∞–¥
  rewardTimeBank  Int                     // –¥–Ω–∏ –∂–∏–∑–Ω–∏ –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
  
  // –£—Å–ª–æ–≤–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
  isActive        Boolean                 @default(true)
  requiresHabit   HabitType?             // —Ç—Ä–µ–±—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –ø—Ä–∏–≤—ã—á–∫—É
  
  // –°–≤—è–∑–∏
  userProgress    UserChallengeProgress[]
  
  createdAt       DateTime                @default(now())
  updatedAt       DateTime                @updatedAt
  
  @@map("challenges")
}

// üìà –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤—ã–∑–æ–≤–∞—Ö
model UserChallengeProgress {
  id              String            @id @default(uuid())
  userId          String
  challengeId     String
  
  user            User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  challenge       Challenge         @relation(fields: [challengeId], references: [id], onDelete: Cascade)
  
  status          ChallengeStatus   @default(IN_PROGRESS)
  startDate       DateTime
  endDate         DateTime?
  
  // –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  currentStreak   Int               @default(0)
  maxStreak       Int               @default(0)
  completedDays   Int               @default(0)
  totalDays       Int
  progress        Float             @default(0) // –æ—Ç 0 –¥–æ 1
  
  // –ù–∞–≥—Ä–∞–¥—ã
  rewardClaimed   Boolean           @default(false)
  rewardClaimedAt DateTime?
  
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  
  @@unique([userId, challengeId, startDate])
  @@map("user_challenge_progress")
}

// üèÜ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
model Achievement {
  id              String              @id @default(uuid())
  
  name            String
  description     String
  category        AchievementCategory
  iconEmoji       String              // —ç–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∞
  
  // –£—Å–ª–æ–≤–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è
  conditions      Json                // JSON —Å —É—Å–ª–æ–≤–∏—è–º–∏
  rewardTimeBank  Int                 // –Ω–∞–≥—Ä–∞–¥–∞ –≤ –¥–Ω—è—Ö –∂–∏–∑–Ω–∏
  
  isActive        Boolean             @default(true)
  rarity          AchievementRarity   @default(COMMON)
  
  // –°–≤—è–∑–∏
  userAchievements UserAchievement[]
  
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  
  @@map("achievements")
}

// üéñÔ∏è –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
model UserAchievement {
  id              String      @id @default(uuid())
  userId          String
  achievementId   String
  
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  achievement     Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)
  
  unlockedAt      DateTime    @default(now())
  rewardClaimed   Boolean     @default(false)
  
  @@unique([userId, achievementId])
  @@map("user_achievements")
}

// üè¶ –ë–∞–Ω–∫ –≤—Ä–µ–º–µ–Ω–∏ –∂–∏–∑–Ω–∏ - –∫–æ—à–µ–ª–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
model TimeBankAccount {
  id              String                @id @default(uuid())
  userId          String                @unique
  user            User                  @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // –ë–∞–ª–∞–Ω—Å –≤ –¥–Ω—è—Ö –∂–∏–∑–Ω–∏
  totalDaysEarned Int                   @default(0)
  totalDaysSpent  Int                   @default(0)
  currentBalance  Int                   @default(0)
  
  // –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  transactions    TimeBankTransaction[]
  
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt
  
  @@map("timebank_accounts")
}

// üí≥ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –±–∞–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
model TimeBankTransaction {
  id              String              @id @default(uuid())
  userId          String
  accountId       String
  
  user            User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  account         TimeBankAccount     @relation(fields: [accountId], references: [id], onDelete: Cascade)
  
  type            TransactionType
  amount          Int                 // –≤ –¥–Ω—è—Ö –∂–∏–∑–Ω–∏ (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –¥–ª—è —Ç—Ä–∞—Ç)
  description     String
  
  // –°–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏
  relatedEntity   String?             // —Ç–∏–ø —Å—É—â–Ω–æ—Å—Ç–∏ (challenge, achievement, purchase)
  relatedId       String?             // ID —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç–∏
  
  createdAt       DateTime            @default(now())
  
  @@map("timebank_transactions")
}

// üõí –ú–∞–≥–∞–∑–∏–Ω —É–ª—É—á—à–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
model StoreItem {
  id              String      @id @default(uuid())
  
  name            String
  description     String
  category        StoreCategory
  price           Int         // —Ü–µ–Ω–∞ –≤ –¥–Ω—è—Ö –∂–∏–∑–Ω–∏
  iconEmoji       String
  
  // –≠—Ñ—Ñ–µ–∫—Ç—ã –ø–æ–∫—É–ø–∫–∏
  effects         Json        // JSON —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
  
  isActive        Boolean     @default(true)
  isLimited       Boolean     @default(false)
  maxPurchases    Int?        // –º–∞–∫—Å–∏–º—É–º –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@map("store_items")
}

// üîç –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
model UserStats {
  id              String    @id @default(uuid())
  userId          String    @unique
  
  // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
  totalChallengesStarted    Int @default(0)
  totalChallengesCompleted  Int @default(0)
  longestStreak            Int @default(0)
  currentStreak            Int @default(0)
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–≤—ã—á–µ–∫
  daysSmokeFree            Int @default(0)
  cigarettesNotSmoked      Int @default(0)
  moneySevedTotal          Float @default(0)
  
  // –†–∞—Å—á–µ—Ç—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–∏
  baseLifeExpectancy       Float
  currentLifeExpectancy    Float
  lifeExtensionDays        Int @default(0)
  
  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
  lastCalculatedAt         DateTime @default(now())
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
}

// üì± Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
model PushNotification {
  id              String              @id @default(uuid())
  userId          String
  
  title           String
  body            String
  type            NotificationType
  data            Json?               // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  
  sentAt          DateTime?
  isRead          Boolean             @default(false)
  readAt          DateTime?
  
  createdAt       DateTime            @default(now())
  
  @@map("push_notifications")
}

// ==================== ENUMS ====================

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum HabitType {
  SMOKING
  ALCOHOL  
  SUGAR
}

enum HabitLogAction {
  CREATED
  UPDATED
  QUIT
  RESUMED
  DELETED
}

enum ChallengeCategory {
  QUIT_HABITS
  HEALTH_IMPROVEMENT
  MENTAL_WELLNESS
  FITNESS
  NUTRITION
}

enum ChallengeDifficulty {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
}

enum ChallengeDuration {
  ONE_DAY
  THREE_DAYS
  ONE_WEEK
  TWO_WEEKS
  ONE_MONTH
  THREE_MONTHS
  SIX_MONTHS
  ONE_YEAR
}

enum ChallengeStatus {
  IN_PROGRESS
  COMPLETED
  FAILED
  PAUSED
}

enum AchievementCategory {
  HABITS
  CHALLENGES
  TIME_SAVED
  SOCIAL
  MILESTONES
}

enum AchievementRarity {
  COMMON
  RARE
  EPIC
  LEGENDARY
}

enum TransactionType {
  EARNED
  SPENT
  BONUS
  REFUND
}

enum StoreCategory {
  BOOSTERS
  COSMETICS
  PREMIUM_FEATURES
  HEALTH_INSIGHTS
}

enum NotificationType {
  CHALLENGE_REMINDER
  HABIT_MILESTONE
  ACHIEVEMENT_UNLOCKED
  DAILY_MOTIVATION
  STREAK_WARNING
}