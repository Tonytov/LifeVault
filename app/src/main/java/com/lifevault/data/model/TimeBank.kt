package com.lifevault.data.model

import androidx.room.Entity
import androidx.room.PrimaryKey
import java.time.LocalDateTime

@Entity(tableName = "time_bank")
data class TimeBank(
    @PrimaryKey
    val userId: Long = 1,
    val totalDaysEarned: Long = 0,        // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–Ω–µ–π
    val totalDaysSpent: Long = 0,         // –ü–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–µ –¥–Ω–∏ –Ω–∞ –ø–æ–∫—É–ø–∫–∏
    val currentBalance: Long = 0,         // –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –¥–Ω–µ–π
    val lifetimeEarnings: Long = 0,       // –û–±—â–∏–µ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–Ω–∏ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
    val streakDays: Int = 0,              // –¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è –¥–Ω–µ–π –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏–π
    val longestStreak: Int = 0,           // –°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è —Å–µ—Ä–∏—è
    val multiplierActive: Boolean = false, // –ê–∫—Ç–∏–≤–Ω—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
    val multiplierValue: Double = 1.0,     // –ó–Ω–∞—á–µ–Ω–∏–µ –º–Ω–æ–∂–∏—Ç–µ–ª—è
    val multiplierExpiresAt: LocalDateTime? = null, // –ö–æ–≥–¥–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç –º–Ω–æ–∂–∏—Ç–µ–ª—å
    val lastActivityDate: LocalDateTime = LocalDateTime.now(),
    val updatedAt: LocalDateTime = LocalDateTime.now()
)

@Entity(tableName = "time_bank_transactions")
data class TimeBankTransaction(
    @PrimaryKey(autoGenerate = true)
    val id: Long = 0,
    val userId: Long,
    val type: TransactionType,
    val amount: Long,                     // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞)
    val source: String,                   // –ò—Å—Ç–æ—á–Ω–∏–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    val description: String,              // –û–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    val habitType: HabitType? = null,     // –°–≤—è–∑–∞–Ω–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞
    val achievementId: Long? = null,      // –°–≤—è–∑–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
    val balanceBefore: Long,              // –ë–∞–ª–∞–Ω—Å –¥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    val balanceAfter: Long,               // –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    val createdAt: LocalDateTime = LocalDateTime.now()
)

enum class TransactionType(val displayName: String, val icon: String) {
    EARNED_QUIT_HABIT("–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ –æ—Ç–∫–∞–∑ –æ—Ç –ø—Ä–∏–≤—ã—á–∫–∏", "üéØ"),
    EARNED_DAILY_GOAL("–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ü–µ–ª—å", "‚úÖ"),
    EARNED_WEEKLY_CHALLENGE("–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—å–Ω—ã–π –≤—ã–∑–æ–≤", "üèÜ"),
    EARNED_ACHIEVEMENT("–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ", "üèÖ"),
    EARNED_STREAK_BONUS("–ë–æ–Ω—É—Å –∑–∞ —Å–µ—Ä–∏—é", "üî•"),
    EARNED_LIFESTYLE_IMPROVEMENT("–£–ª—É—á—à–µ–Ω–∏–µ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏", "üí™"),
    SPENT_REWARD("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –Ω–∞ –Ω–∞–≥—Ä–∞–¥—É", "üéÅ"),
    SPENT_PREMIUM_FEATURE("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –Ω–∞ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏—é", "‚≠ê"),
    ADJUSTMENT_ADMIN("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞", "‚öôÔ∏è")
}

// –ú–∞–≥–∞–∑–∏–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥
@Entity(tableName = "time_bank_rewards")
data class TimeBankReward(
    @PrimaryKey(autoGenerate = true)
    val id: Long = 0,
    val title: String,
    val description: String,
    val cost: Long,                       // –°—Ç–æ–∏–º–æ—Å—Ç—å –≤ –¥–Ω—è—Ö –∂–∏–∑–Ω–∏
    val category: RewardCategory,
    val icon: String,
    val isActive: Boolean = true,
    val isPremium: Boolean = false,
    val unlockRequirement: String? = null, // –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    val createdAt: LocalDateTime = LocalDateTime.now()
)

enum class RewardCategory(val displayName: String, val emoji: String) {
    VIRTUAL_REWARDS("–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã", "üèÜ"),
    APP_FEATURES("–§—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", "‚öôÔ∏è"),
    HEALTH_INSIGHTS("–ó–¥–æ—Ä–æ–≤—å–µ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", "üìä"),
    CUSTOMIZATION("–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è", "üé®"),
    ACHIEVEMENTS("–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", "üèÖ")
}

// –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ
object TimeBankRewards {
    val DEFAULT_REWARDS = listOf(
        TimeBankReward(
            title = "–ó–æ–ª–æ—Ç–∞—è –º–µ–¥–∞–ª—å",
            description = "–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∑–æ–ª–æ—Ç–∞—è –º–µ–¥–∞–ª—å –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è",
            cost = 30,
            category = RewardCategory.VIRTUAL_REWARDS,
            icon = "ü•á"
        ),
        TimeBankReward(
            title = "–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            description = "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ –º–µ—Å—è—Ü",
            cost = 90,
            category = RewardCategory.APP_FEATURES,
            icon = "üìà"
        ),
        TimeBankReward(
            title = "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –ò–ò",
            description = "–ò–ò-—Å–æ–≤–µ—Ç—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –Ω–∞ –Ω–µ–¥–µ–ª—é",
            cost = 180,
            category = RewardCategory.HEALTH_INSIGHTS,
            icon = "ü§ñ"
        ),
        TimeBankReward(
            title = "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞",
            description = "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
            cost = 60,
            category = RewardCategory.CUSTOMIZATION,
            icon = "üåô"
        ),
        TimeBankReward(
            title = "–ó–Ω–∞—á–æ–∫ '–õ–µ–≥–µ–Ω–¥–∞ –∑–¥–æ—Ä–æ–≤—å—è'",
            description = "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∑–Ω–∞—á–æ–∫ –≤ –ø—Ä–æ—Ñ–∏–ª–µ",
            cost = 365,
            category = RewardCategory.ACHIEVEMENTS,
            icon = "üëë",
            isPremium = true
        ),
        TimeBankReward(
            title = "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
            description = "–≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –æ –∑–¥–æ—Ä–æ–≤—å–µ –≤ CSV",
            cost = 45,
            category = RewardCategory.APP_FEATURES,
            icon = "üì§"
        ),
        TimeBankReward(
            title = "–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–∏",
            description = "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ —Å –ò–ò –Ω–∞ –º–µ—Å—è—Ü",
            cost = 120,
            category = RewardCategory.HEALTH_INSIGHTS,
            icon = "üîÆ"
        ),
        TimeBankReward(
            title = "–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä",
            description = "–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞",
            cost = 75,
            category = RewardCategory.CUSTOMIZATION,
            icon = "üé≠"
        )
    )
}

// –°–∏—Å—Ç–µ–º–∞ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
object TimeEarningSystem {
    
    // –ë–∞–∑–æ–≤—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∑–∞ –æ—Ç–∫–∞–∑ –æ—Ç –ø—Ä–∏–≤—ã—á–µ–∫ (–≤ –¥–Ω—è—Ö)
    val HABIT_QUIT_REWARDS = mapOf(
        HabitType.SMOKING to 5,    // 5 –¥–Ω–µ–π –∑–∞ –æ—Ç–∫–∞–∑ –æ—Ç –∫—É—Ä–µ–Ω–∏—è
        HabitType.ALCOHOL to 3,    // 3 –¥–Ω—è –∑–∞ –æ—Ç–∫–∞–∑ –æ—Ç –∞–ª–∫–æ–≥–æ–ª—è
        HabitType.SUGAR to 2       // 2 –¥–Ω—è –∑–∞ –æ—Ç–∫–∞–∑ –æ—Ç —Å–∞—Ö–∞—Ä–∞
    )
    
    // –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—Ç–∫–∞–∑–∞
    val DAILY_MAINTENANCE_REWARDS = mapOf(
        HabitType.SMOKING to 0.2,  // 0.2 –¥–Ω—è (4.8 —á–∞—Å–∞) –∑–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±–µ–∑ –∫—É—Ä–µ–Ω–∏—è
        HabitType.ALCOHOL to 0.1,  // 0.1 –¥–Ω—è (2.4 —á–∞—Å–∞) –∑–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±–µ–∑ –∞–ª–∫–æ–≥–æ–ª—è
        HabitType.SUGAR to 0.05    // 0.05 –¥–Ω—è (1.2 —á–∞—Å–∞) –∑–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±–µ–∑ —Å–∞—Ö–∞—Ä–∞
    )
    
    // –ë–æ–Ω—É—Å—ã –∑–∞ —Å–µ—Ä–∏–∏
    val STREAK_BONUSES = mapOf(
        7 to 3,      // 3 –¥–Ω—è –∑–∞ –Ω–µ–¥–µ–ª—é
        14 to 7,     // 7 –¥–Ω–µ–π –∑–∞ 2 –Ω–µ–¥–µ–ª–∏
        30 to 15,    // 15 –¥–Ω–µ–π –∑–∞ –º–µ—Å—è—Ü
        90 to 50,    // 50 –¥–Ω–µ–π –∑–∞ 3 –º–µ—Å—è—Ü–∞
        180 to 120,  // 120 –¥–Ω–µ–π –∑–∞ –ø–æ–ª–≥–æ–¥–∞
        365 to 365   // 365 –¥–Ω–µ–π (1 –≥–æ–¥) –∑–∞ –≥–æ–¥
    )
    
    // –ú–Ω–æ–∂–∏—Ç–µ–ª–∏ –∑–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    fun getStreakMultiplier(streakDays: Int): Double {
        return when {
            streakDays >= 365 -> 3.0  // 3x –º–Ω–æ–∂–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –≥–æ–¥–∞
            streakDays >= 180 -> 2.5  // 2.5x –º–Ω–æ–∂–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –ø–æ–ª—É–≥–æ–¥–∞
            streakDays >= 90 -> 2.0   // 2x –º–Ω–æ–∂–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ 3 –º–µ—Å—è—Ü–µ–≤
            streakDays >= 30 -> 1.5   // 1.5x –º–Ω–æ–∂–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –º–µ—Å—è—Ü–∞
            streakDays >= 7 -> 1.2    // 1.2x –º–Ω–æ–∂–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –Ω–µ–¥–µ–ª–∏
            else -> 1.0
        }
    }
    
    // –†–∞—Å—á–µ—Ç –¥–Ω–µ–≤–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞
    fun calculateDailyEarning(
        quitHabits: List<Habit>,
        streakDays: Int,
        lifestyleScore: Float
    ): Double {
        var totalEarning = 0.0
        
        // –ù–∞—á–∏—Å–ª–µ–Ω–∏—è –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—Ç–∫–∞–∑–∞ –æ—Ç –ø—Ä–∏–≤—ã—á–µ–∫
        quitHabits.filter { !it.isActive }.forEach { habit ->
            val baseReward = DAILY_MAINTENANCE_REWARDS[habit.type] ?: 0.0
            totalEarning += baseReward
        }
        
        // –ë–æ–Ω—É—Å –∑–∞ –∑–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
        totalEarning += lifestyleScore * 0.1 // –î–æ 0.1 –¥–Ω—è –∑–∞ –æ—Ç–ª–∏—á–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å –∑–∞ —Å–µ—Ä–∏—é
        val multiplier = getStreakMultiplier(streakDays)
        totalEarning *= multiplier
        
        return totalEarning
    }
}

// –°–∏—Å—Ç–µ–º–∞ –ø–æ–∫—É–ø–∫–∏ –Ω–∞–≥—Ä–∞–¥
data class RewardPurchase(
    val rewardId: Long,
    val userId: Long,
    val purchaseDate: LocalDateTime,
    val cost: Long,
    val isActive: Boolean = true,
    val expiresAt: LocalDateTime? = null // –î–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥
)

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Time Bank
data class TimeBankStats(
    val totalDaysEarned: Long,
    val averageDailyEarning: Double,
    val biggestSingleEarning: Long,
    val totalSpent: Long,
    val currentBalance: Long,
    val streakDays: Int,
    val rewardsPurchased: Int,
    val favoriteRewardCategory: RewardCategory?
)